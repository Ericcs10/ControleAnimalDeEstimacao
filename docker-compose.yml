version: '3.8'

services:
  backend:
    build: 
      context: ./backend
      dockerfile: Dockerfile
    ports:
      - "8000:8000"  
    env_file:
      - .env  
    environment:
      - MONGO_URL=mongodb://root:example@mongo:27017/petdb?authSource=admin
    volumes:
      - ./backend/app:/app/app
      - backend-python-cache:/root/.cache/pip
    depends_on:
      - mongo
    restart: "no"
    networks:
      - pets-network



  mongo:
    image: mongo:6.0
    ports:
      - "27017:27017" 
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: example
    volumes:
      - mongo_data:/data/db
    restart: unless-stopped
    networks:
      - pets-network

  mongo-express:
    image: mongo-express
    restart: always
    ports:
      - "8081:8081"
    environment:
      ME_CONFIG_MONGODB_ADMINUSERNAME: root
      ME_CONFIG_MONGODB_ADMINPASSWORD: example
      ME_CONFIG_MONGODB_URL: mongodb://root:example@mongo:27017/
    depends_on:
      - mongo
    networks:
      - pets-network

  tests:
    build:
      context: ./backend
      dockerfile: Dockerfile
    command: tail -f /dev/null
    env_file:
      - .env
    environment:
      - MONGO_URL=mongodb://root:example@mongo:27017/testdb?authSource=admin
      - PYTHONPATH=/app
    volumes:
      - ./backend:/app
    depends_on:
      - backend
    networks:
      - pets-network
    restart: "no"

volumes:
  mongo_data:
  backend-python-cache:


networks:
  pets-network:
    driver: bridge


version: '3.8'

services:
  mongo:
    image: mongo:6.0
    ports:
      - "27017:27017"
    environment:
      - MONGO_INITDB_ROOT_USERNAME=root
      - MONGO_INITDB_ROOT_PASSWORD=example
    volumes:
      - mongo_data:/data/db
    networks:
      - pets-network

  mongo-express:
    image: mongo-express
    ports:
      - "8081:8081"
    environment:
      - ME_CONFIG_MONGODB_ADMINUSERNAME=root
      - ME_CONFIG_MONGODB_ADMINPASSWORD=example
      - ME_CONFIG_MONGODB_URL=mongodb://root:example@mongo:27017/
    depends_on:
      - mongo
    networks:
      - pets-network

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    ports:
      - "8000:8000"
    env_file:
      - .env
    environment:
      - MONGODB_URL=mongodb://root:example@mongo:27017/petdb?authSource=admin
      - MONGODB_NAME=petdb
    volumes:
      - ./backend:/app
    depends_on:
      - mongo
    networks:
      - pets-network

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    ports:
      - "5173:80"
    depends_on:
      - backend
    networks:
      - pets-network

  tests:
    build:
      context: ./backend
      dockerfile: Dockerfile
    command: tail -f /dev/null
    env_file:
      - .env
    environment:
      - MONGODB_URL=mongodb://root:example@mongo:27017/testdb?authSource=admin
      - MONGODB_NAME=petdb_test
      - PYTHONPATH=/app
    volumes:
      - ./backend:/app
    depends_on:
      - backend
    networks:
      - pets-network

  fakedata:
    build:
      context: ./backend
      dockerfile: Dockerfile
    command: python app/utils/fake_data.py
    env_file:
      - .env
    environment:
      - MONGODB_URL=mongodb://root:example@mongo:27017/petdb?authSource=admin
      - PYTHONPATH=/app
    volumes:
      - ./backend:/app
    depends_on:
      - mongo
    networks:
      - pets-network

volumes:
  mongo_data:

networks:
  pets-network:
    driver: bridge

